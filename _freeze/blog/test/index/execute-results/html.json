{
  "hash": "699a6e642ee0f73c47292d16b01ce80b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Test\nauthor: HTML Editor\npage-layout: article\nsidebar: false\ndate: 2023-04-27\ndraft: true\ndescription: | \n  Test of different Markdown elements.\n\n---\n\n*access this page by running `quarto preview` in the terminal and going to url /blog/test/*\n\n# Header 1\n\n## Header 2\n\n### Header 3\n\n#### Header 4\n\n##### Header 5\n\n```python\nprint(\"This is a code block)\n```\n\n> Quote\n>\n> *Author*\n\n- List\n- List\n- List\n\n1. List\n2. List\n3. List\n\n[Link](https://www.google.com)\n\n***Lets show*** the normal text: Normal Text (Did you see this small caps example?), **Bold** and  *Italic*, followed by an HR.\n\n---\n\nHere's a simple footnote,[^1] , wow would you look at that a second footnote.[^2]\n\n[^2]: This is the second footnote.\n[^1]: This is the first footnote.\n\nNow some cool math:\n\n$$\nE = mc^2\n$$\n\nTable:\n\n| Header 1 | Header 2 | Header 3 |\n|----------|----------|----------|\n| Cell 1   | Cell 2   | Cell 3   |\n| Cell 4   | Cell 5   | Cell 6   |\n| Cell 7   | Cell 8   | Cell 9   |\n| Cell 10  | Cell 11  | Cell 12  |\n: This is a table caption.\n\n---\n\nLets create a theme to better fit the visual style of the website\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#remotes::install_github(\"Financial-Times/ftplottools\")\nlibrary(ftplottools)\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell caption='Test of ggplot'}\n\n```{.r .cell-code}\ndata <- data.frame(x = c(1, 2, 3, 4, 5),\n           y = c(2, 4, 6, 8, 10))\n\nplot_themed <- ggplot(data, aes(x, y)) +\n  geom_point() +\n  geom_line() +\n  labs(title = \"Simple ggplot\",\n     x = \"X-axis\",\n     y = \"Y-axis\") +\n  ft_theme() +\n  theme(\n    panel.background = element_rect(fill = \"#F2DBCE\", color=\"#F2DBCE\"),\n    plot.background = element_rect(fill = \"transparent\", color=\"transparent\")\n    )\nplot_themed\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/fig-test-1.svg){#fig-test width=672}\n:::\n:::\n\n\nNow lets have two plots side by side with `layout-ncol: 2`, and hide the code\n\n\n::: {.cell layout-ncol=\"2\" caption='Wide on Page'}\n\n```{.r .cell-code  code-fold=\"true\"}\ndata1 <- data.frame(x = c(4, 2, 3, 4, 5),\n           y = c(2, 4, 6, 8, 10))\ndata2 <- data.frame(x = c(4, 6, 8, 1, 5),\n           y = c(2, 4, 6, 8, 10))\n\nplot_1 <- ggplot(data1, aes(x, y)) +\n  geom_point() +\n  geom_line()+\n  labs(title = \"Plot 1\") +\n  ft_theme() +\n  theme(\n    panel.background = element_rect(fill = \"#F2DBCE\", color=\"#F2DBCE\"),\n    plot.background = element_rect(fill = \"transparent\", color=\"transparent\")\n  )\n\nplot_2 <- ggplot(data2, aes(x, y)) +\n  geom_point() +\n  geom_line()+\n  labs(title = \"Plot 2\") +\n  ft_theme() +\n  theme(\n    panel.background = element_rect(fill = \"#F2DBCE\", color=\"#F2DBCE\"),\n    plot.background = element_rect(fill = \"transparent\", color=\"transparent\")\n  )\n\nplot_1\nplot_2\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/fig-wide-1.svg){#fig-wide-1 width=672}\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/fig-wide-2.svg){#fig-wide-2 width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}